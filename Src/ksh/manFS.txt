

* lsblk pour lister les partitions disponibles　

on crée des partitions virtuelles sur ces machines, en utilisant le package lvm (installé)　

les commandes pour voir l'espace disque disponible:　

root@s00vl9979836:~$ pvs　

PV VG Fmt Attr PSize PFree　

/dev/sda2 rootvg lvm2 a-- 99.50g 8.98g　

/dev/sdb vg_apps lvm2 a-- 204.00g 41.54g　

root@s00vl9979836:~$ vgs　

VG #PV #LV #SN Attr VSize VFree　

rootvg 1 21 0 wz--n- 99.50g 8.98g　

vg_apps 1 6 0 wz--n- 204.00g 41.54g　

root@s00vl9979836:~$　

lvs pour voir les partitions logiques existantes 　

root@s00vl9979836:~$ lvs　

LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert　

apps rootvg -wi-ao---- 1.00g　

back rootvg -wi-ao---- 10.00g　

crash rootvg -wi-ao---- 1.93g　

deploy rootvg -wi-ao---- 2.00g　

home rootvg -wi-ao---- 1.00g　

lv_BIGFIX rootvg -wi-ao---- 92.00m　

lv_CoreDP rootvg -wi-ao---- 1.88g　

lv_ITCM rootvg -wi-ao---- 2.00g　

lv_SPLUNK rootvg -wi-ao---- 500.00m　

lv_TAD4D rootvg -wi-ao---- 500.00m　

lv_logrotate rootvg -wi-ao---- 1.00g　

lv_nimsoft rootvg -wi-ao---- 512.00m　

lv_perfs rootvg -wi-ao---- 512.00m　

lv_scm rootvg -wi-ao---- 500.00m　

opt rootvg -wi-ao---- 15.00g　

root rootvg -wi-ao---- 1.00g　

swap rootvg -wi-ao---- 16.16g　

sys rootvg -wi-ao---- 1.00g　

tmp rootvg -wi-ao---- 1.00g　

usr rootvg -wi-ao---- 14.00g　

var rootvg -wi-ao---- 19.00g　

lv_MDM vg_apps -wi-ao---- 151.95g　

lv_appexploit vg_apps -wi-ao---- 1.00g　

lv_cli6412102 vg_apps -wi-ao---- 6.00g　

lv_getlog vg_apps -wi-ao---- 512.00m　

lv_oracle vg_apps -wi-ao---- 2.00g　

lv_toolboxes vg_apps -wi-ao---- 1.00g　

on utilise lvextend pour étendre une partition　

###exemple : étendre la partition /usr　

root@s00vl9979836:~$ lvextend /dev/rootvg/usr +1G　

Physical Volume "+1G" not found in Volume Group "rootvg".　

root@s00vl9979836:~$ lvextend -L +1G /dev/rootvg/usr　

Size of logical volume rootvg/usr changed from 14.00 GiB (3584 extents) to 15.00 GiB (3840 extents).　

Logical volume usr successfully resized.　

root@s00vl9979836:~$ resize2fs /usr/　

resize2fs 1.42.9 (28-Dec-2013)　

open: Is a directory while opening /usr/　

root@s00vl9979836:~$ resize2fs /dev/rootvg/usr　

resize2fs 1.42.9 (28-Dec-2013)　

Filesystem at /dev/rootvg/usr is mounted on /usr; on-line resizing required　

old_desc_blocks = 2, new_desc_blocks = 2　

The filesystem on /dev/rootvg/usr is now 3932160 blocks long.



-------------------------------------------------------------------------------------------------------------------------------
LVEXTEND(8)                                                                                             System Manager's Manual                                                                                             LVEXTEND(8)



NAME
       lvextend -- extend the size of a logical volume

SYNOPSIS
       lvextend  [--alloc  AllocationPolicy]  [-A|--autobackup  {y|n}]  [--commandprofile ProfileName] [-d|--debug] [-h|-?|--help] [-f|--force] [-i|--stripes Stripes [-I|--stripesize StripeSize]] {-l|--extents [+]LogicalExtentsNum-
       ber[%{VG|LV|PVS|FREE|ORIGIN}] | -L|--size [+]LogicalVolumeSize[bBsSkKmMgGtTpPeE]} [-n|--nofsck] [--noudevsync] [-r|--resizefs] [--use-policies] [-t|--test] [-v|--verbose] LogicalVolumePath [PhysicalVolumePath[:PE[-PE]]...]

DESCRIPTION
       lvextend allows you to extend the size of a logical volume.  Extension of snapshot logical volumes (see lvcreate(8) for information to create snapshots) is supported as well.  But to change the number of copies in a mirrored
       logical volume use lvconvert(8).

OPTIONS
       See lvm(8) for common options.

       -f, --force
              Proceed with size extension without prompting.

       -l, --extents [+]LogicalExtentsNumber[%{VG|LV|PVS|FREE|ORIGIN}]
              Extend  or set the logical volume size in units of logical extents.  With the '+' sign the value is added to the actual size of the logical volume and without it, the value is taken as an absolute one.  The total num-
              ber of physical extents allocated will be greater than this, for example, if the volume is mirrored.  The number can also be expressed as a percentage of the total space in the Volume Group with the suffix %VG,  rela-
              tive  to  the  existing  size  of the Logical Volume with the suffix %LV, of the remaining free space for the specified PhysicalVolume(s) with the suffix %PVS, as a percentage of the remaining free space in the Volume
              Group with the suffix %FREE, or (for a snapshot) as a percentage of the total space in the Origin Logical Volume with the suffix %ORIGIN.  The resulting value is  rounded  upward.   N.B.  In  a  future  release,  when
              expressed  as  a percentage with PVS, VG or FREE, the number will be treated as an approximate upper limit for the total number of physical extents to be allocated (including extents used by any mirrors, for example).
              The code may currently allocate more space than you might otherwise expect.

       -L, --size [+]LogicalVolumeSize[bBsSkKmMgGtTpPeE]
              Extend or set the logical volume size in units of megabytes.  A size suffix of M for megabytes, G for gigabytes, T for terabytes, P for petabytes or E for exabytes is optional.  With the + sign the value is  added  to
              the actual size of the logical volume and without it, the value is taken as an absolute one.

       -i, --stripes Stripes
              Gives the number of stripes for the extension.  Not applicable to LVs using the original metadata LVM format, which must use a single value throughout.

       -I, --stripesize StripeSize
              Gives the number of kilobytes for the granularity of the stripes.  Not applicable to LVs using the original metadata LVM format, which must use a single value throughout.
              StripeSize must be 2^n (n = 2 to 9)

       -n, --nofsck
              Do not perform fsck before extending filesystem when filesystem requires it. You may need to use --force to proceed with this option.

       --noudevsync
              Disable udev synchronisation. The process will not wait for notification from udev.  It will continue irrespective of any possible udev processing in the background.  You should only use this if udev is not running or
              has rules that ignore the devices LVM2 creates.

       -r, --resizefs
              Resize underlying filesystem together with the logical volume using fsadm(8).

       --use-policies
              Resizes the logical volume according to configured policy. See lvm.conf(5) for some details.


Examples
       Extends the size of the logical volume "vg01/lvol10" by 54MiB on physical volume /dev/sdk3. This is only possible if /dev/sdk3 is a member of volume group vg01 and there are enough free physical extents in it:

       lvextend -L +54 /dev/vg01/lvol10 /dev/sdk3

       Extends the size of logical volume "vg01/lvol01" by the amount of free space on physical volume /dev/sdk3. This is equivalent to specifying "-l +100%PVS" on the command line:

       lvextend /dev/vg01/lvol01 /dev/sdk3

       Extends a logical volume "vg01/lvol01" by 16MiB using physical extents /dev/sda:8-9 and /dev/sdb:8-9 for allocation of extents:

       lvextend -L+16M vg01/lvol01 /dev/sda:8-9 /dev/sdb:8-9


SEE ALSO
       fsadm(8), lvm(8), lvm.conf(5), lvcreate(8), lvconvert(8), lvreduce(8), lvresize(8), lvchange(8)



Sistina Software UK                                                                             LVM TOOLS 2.02.130(2)-RHEL7 (2015-10-14)                                                                                    LVEXTEND(8)
PVS(8)                                                                                                  System Manager's Manual                                                                                                  PVS(8)


-----------------------------------------------------------------------------------------------------------------------------------------
NAME
       pvs -- report information about physical volumes

SYNOPSIS
       pvs   [-a|--all]   [--aligned]   [--binary]   [--commandprofile   ProfileName]   [-d|--debug]  [-h|-?|--help]  [--ignorelockingfailure]  [--ignoreskippedcluster]  [--nameprefixes]  [--noheadings]  [--nosuffix]  [-o|--options
       [+]Field[,Field...]]  [-O|--sort [+|-]Key1[,[+|-]Key2...]]  [-P|--partial] [--rows] [--segments] [-S|--select Selection] [--separator Separator] [--unbuffered] [--units hHbBsSkKmMgGtTpPeE] [--unquoted] [-v|--verbose] [--ver-
       sion] [PhysicalVolume [PhysicalVolume...]]

DESCRIPTION
       pvs produces formatted output about physical volumes.

OPTIONS
       See lvm(8) for common options.

       --all  Include information in the output about devices that have not been initialized with pvcreate(8).

       --aligned
              Use with --separator to align the output columns.

       --binary
              Use binary values "0" or "1" instead of descriptive literal values for columns that have exactly two valid values to report (not counting the "unknown" value which denotes that the value could not be determined).

       --nameprefixes
              Add an "LVM2_" prefix plus the field name to the output.  Useful with --noheadings to produce a list of field=value pairs that can be used to set environment variables (for example, in udev(7) rules).

       --noheadings
              Suppress the headings line that is normally the first line of output.  Useful if grepping the output.

       --nosuffix
              Suppress the suffix on output sizes.  Use with --units (except h and H) if processing the output.

       -o, --options
              Comma-separated ordered list of columns.  Precede the list with '+' to append to the default selection of columns.

              Use -o pv_all to select all physical volume columns, and -o pvseg_all to select all Physical Volume segment columns.

              Use -o help to view the full list of columns available.

              Column  names  include:  pv_fmt,  pv_uuid,  dev_size,  pv_name,  pv_mda_free,  pv_mda_size, pv_ba_start, pv_ba_size, pe_start, pv_size, pv_free, pv_used, pv_attr, pv_pe_count, pv_pe_alloc_count, pv_tags, pv_mda_count,
              pv_mda_used_count, pvseg_start, and pvseg_size

              With --segments, any "pvseg_" prefixes are optional; otherwise any "pv_" prefixes are optional.  Columns mentioned in vgs(8) can also be chosen. The pv_attr bits are: (a)llocatable, e(x)ported and (m)issing.

       --segments
              Produces one line of output for each contiguous allocation of space on each Physical Volume, showing the start (pvseg_start) and length (pvseg_size) in units of physical extents.

       -S, --select Selection
              Display only rows that match Selection criteria. All rows are displayed with the additional "selected" column (-o selected) showing 1 if the row matches the Selection  and  0  otherwise.  The  Selection  criteria  are
              defined  by  specifying  column names and their valid values (that can include reserved values) while making use of supported comparison operators. See lvm(8) and -S, --select description for more detailed information
              about constructing the Selection criteria. As a quick help and to see full list of column names that can be used in Selection including the list of reserved values and the set of supported selection  operators,  check
              the output of pvs -S help command.

       -O, --sort
              Comma-separated ordered list of columns to sort by.  Replaces the default selection. Precede any column with '-' for a reverse sort on that column.

       --rows Output columns as rows.

       --separator Separator
              String to use to separate each column.  Useful if grepping the output.

       --unbuffered
              Produce output immediately without sorting or aligning the columns properly.

       --units hHbBsSkKmMgGtTpPeE
              All sizes are output in these units: (h)uman-readable, (b)ytes, (s)ectors, (k)ilobytes, (m)egabytes, (g)igabytes, (t)erabytes, (p)etabytes, (e)xabytes.  Capitalise to use multiples of 1000 (S.I.) instead of 1024.  Can
              also specify custom units e.g. --units 3M

       --unquoted
              When used with --nameprefixes, output values in the field=value pairs are not quoted.

SEE ALSO
       lvm(8), pvdisplay(8), lvs(8), vgs(8)



Sistina Software UK                                                                             LVM TOOLS 2.02.130(2)-RHEL7 (2015-10-14)                                                                                         PVS(8)
VGS(8)                                                                                                  System Manager's Manual                                                                                                  VGS(8)


------------------------------------------------------------------------------------------------------------------------------------------
NAME
       vgs -- report information about volume groups

SYNOPSIS
       vgs   [-a|--all]   [--aligned]   [--binary]   [--commandprofile   ProfileName]   [-d|--debug]  [-h|-?|--help]  [--ignorelockingfailure]  [--ignoreskippedcluster]  [--nameprefixes]  [--noheadings]  [--nosuffix]  [-o|--options
       [+]Field1[,Field2...]]  [-O|--sort [+|-]Key1[,[+|-]Key2...]]  [-P|--partial] [--rows] [-S|--select Selection] [--separator Separator] [--unbuffered] [--units hHbBsSkKmMgGtTpPeE] [--unquoted] [-v|--verbose] [--version]  [Vol-
       umeGroupName [VolumeGroupName...]]

DESCRIPTION
       vgs produces formatted output about volume groups.

OPTIONS
       See lvm(8) for common options.

       --all  List all volume groups.  Equivalent to not specifying any volume groups.

       --aligned
              Use with --separator to align the output columns.

       --binary
              Use binary values "0" or "1" instead of descriptive literal values for columns that have exactly two valid values to report (not counting the "unknown" value which denotes that the value could not be determined).

       --nameprefixes
              Add an "LVM2_" prefix plus the field name to the output.  Useful with --noheadings to produce a list of field=value pairs that can be used to set environment variables (for example, in udev(7) rules).

       --noheadings
              Suppress the headings line that is normally the first line of output.  Useful if grepping the output.

       --nosuffix
              Suppress the suffix on output sizes.  Use with --units (except h and H) if processing the output.

       -o, --options
              Comma-separated ordered list of columns.  Precede the list with '+' to append to the default selection of columns.

              Use -o vg_all to select all volume group columns.

              Use -o help to view the full list of columns available.

              Column  names  include:  vg_fmt,  vg_uuid,  vg_name,  vg_attr, vg_size, vg_free, vg_sysid, vg_extent_size, vg_extent_count, vg_free_count, vg_profile, max_lv, max_pv, pv_count, lv_count, snap_count, vg_seqno, vg_tags,
              vg_mda_count, vg_mda_free, and vg_mda_size, vg_mda_used_count.

              Any "vg_" prefixes are optional.  Columns mentioned in either pvs(8) or lvs(8) can also be chosen, but columns cannot be taken from both at the same time.

              The vg_attr bits are:

              1  Permissions: (w)riteable, (r)ead-only

              2  Resi(z)eable

              3  E(x)ported

              4  (p)artial: one or more physical volumes belonging to the volume group are missing from the system

              5  Allocation policy: (c)ontiguous, c(l)ing, (n)ormal, (a)nywhere

              6  (c)lustered, (s)hared

       -O, --sort
              Comma-separated ordered list of columns to sort by.  Replaces the default selection. Precede any column with '-' for a reverse sort on that column.

       --rows Output columns as rows.

       -S, --select Selection
              Display only rows that match Selection criteria. All rows are displayed with the additional "selected" column (-o selected) showing 1 if the row matches the Selection  and  0  otherwise.  The  Selection  criteria  are
              defined  by  specifying  column names and their valid values (that can include reserved values) while making use of supported comparison operators. See lvm(8) and -S, --select description for more detailed information
              about constructing the Selection criteria. As a quick help and to see full list of column names that can be used in Selection including the list of reserved values and the set of supported selection  operators,  check
              the output of vgs -S help command.

       --separator Separator
              String to use to separate each column.  Useful if grepping the output.

       --unbuffered
              Produce output immediately without sorting or aligning the columns properly.

       --units hHbBsSkKmMgGtTpPeE
              All sizes are output in these units: (h)uman-readable, (b)ytes, (s)ectors, (k)ilobytes, (m)egabytes, (g)igabytes, (t)erabytes, (p)etabytes, (e)xabytes.  Capitalise to use multiples of 1000 (S.I.) instead of 1024.  Can
              also specify custom units e.g. --units 3M

       --unquoted
              When used with --nameprefixes, output values in the field=value pairs are not quoted.

SEE ALSO
       lvm(8), vgdisplay(8), pvs(8), lvs(8)



Sistina Software UK                                                                             LVM TOOLS 2.02.130(2)-RHEL7 (2015-10-14)                                                                                         VGS(8)
LVS(8)                                                                                                  System Manager's Manual                                                                                                  LVS(8)



------------------------------------------------------------------------------------------------------------------------------------------
NAME
       lvs -- report information about logical volumes

SYNOPSIS
       lvs  [--aligned] [--binary] [-a|--all] [--commandprofile ProfileName] [-d|--debug] [-h|-?|--help] [--ignorelockingfailure] [--ignoreskippedcluster] [--nameprefixes] [--noheadings] [--nosuffix] [-o|--options [+]Field[,Field]]
       [-O|--sort [+|-]Key1[,[+|-]Key2[,...]]]  [-P|--partial] [--rows] [-S|--select Selection] [--separator Separator] [--segments] [--unbuffered] [--units hHbBsSkKmMgGtTpPeE] [--unquoted] [-v|--verbose] [--version]  [VolumeGroup-
       Name|LogicalVolume{Name|Path} [VolumeGroupName|LogicalVolume{Name|Path} ...]]


DESCRIPTION
       lvs produces formatted output about logical volumes.

OPTIONS
       See lvm(8) for common options.

       --aligned
              Use with --separator to align the output columns.

       --binary
              Use binary values "0" or "1" instead of descriptive literal values for columns that have exactly two valid values to report (not counting the "unknown" value which denotes that the value could not be determined).

       --all  Include information in the output about internal Logical Volumes that are components of normally-accessible Logical Volumes, such as mirrors, but which are not independently accessible (e.g. not mountable).  The names
              of such Logical Volumes are enclosed within square brackets in the output.  For example, after creating a mirror using lvcreate -m1 --mirrorlog disk , this option will reveal three internal Logical Volumes, with  suf-
              fixes mimage_0, mimage_1, and mlog.

       --nameprefixes
              Add an "LVM2_" prefix plus the field name to the output.  Useful with --noheadings to produce a list of field=value pairs that can be used to set environment variables (for example, in udev(7) rules).

       --noheadings
              Suppress the headings line that is normally the first line of output.  Useful if grepping the output.

       --nosuffix
              Suppress the suffix on output sizes.  Use with --units (except h and H) if processing the output.

       -o, --options
              Comma-separated ordered list of columns.  Precede the list with '+' to append to the default selection of columns instead of replacing it.

              Use -o lv_all to select all logical volume columns, and -o seg_all to select all logical volume segment columns.

              Use -o help to view the full list of columns available.

              Column  names  include:  chunk_size,  convert_lv,  copy_percent,  data_lv, devices, discards, lv_attr, lv_host, lv_kernel_major, lv_kernel_minor, lv_kernel_read_ahead, lv_major, lv_minor, lv_name, lv_path, lv_profile,
              lv_read_ahead, lv_size, lv_tags, lv_time, lv_uuid, metadata_lv, mirror_log, modules, move_pv,  origin,  origin_size,  pool_lv,  raid_max_recovery_rate,  raid_min_recovery_rate,  raid_mismatch_count,  raid_sync_action,
              raid_write_behind, region_size, segtype, seg_count, seg_pe_ranges, seg_size, seg_size_pe, seg_start, seg_start_pe, seg_tags, snap_percent, stripes, stripe_size, sync_percent, thin_count, transaction_id, zero.

              With --segments, any "seg_" prefixes are optional; otherwise any "lv_" prefixes are optional. Columns mentioned in vgs(8) can also be chosen.

              The lv_attr bits are:

              1  Volume  type: (C)ache, (m)irrored, (M)irrored without initial sync, (o)rigin, (O)rigin with merging snapshot, (r)aid, (R)aid without initial sync, (s)napshot, merging (S)napshot, (p)vmove, (v)irtual, mirror or raid
                 (i)mage, mirror or raid (I)mage out-of-sync, mirror (l)og device, under (c)onversion, thin (V)olume, (t)hin pool, (T)hin pool data, raid or pool m(e)tadata or pool metadata spare.

              2  Permissions: (w)riteable, (r)ead-only, (R)ead-only activation of non-read-only volume

              3  Allocation policy:  (a)nywhere, (c)ontiguous, (i)nherited, c(l)ing, (n)ormal This is capitalised if the volume is currently locked against allocation changes, for example during pvmove(8).

              4  fixed (m)inor

              5  State: (a)ctive, (s)uspended, (I)nvalid snapshot, invalid (S)uspended snapshot, snapshot (m)erge failed, suspended snapshot (M)erge failed, mapped (d)evice present without tables, mapped device present with (i)nac-
                 tive table, (X) unknown

              6  device (o)pen, (X) unknown

              7  Target  type:  (C)ache,  (m)irror,  (r)aid, (s)napshot, (t)hin, (u)nknown, (v)irtual.  This groups logical volumes related to the same kernel target together.  So, for example, mirror images, mirror logs as well as
                 mirrors themselves appear as (m) if they use the original device-mapper mirror kernel driver; whereas the raid equivalents using the md raid kernel driver all appear as (r).  Snapshots using  the  original  device-
                 mapper driver appear as (s); whereas snapshots of thin volumes using the new thin provisioning driver appear as (t).

              8  Newly-allocated data blocks are overwritten with blocks of (z)eroes before use.

              9  Volume  Health:  (p)artial,  (r)efresh  needed,  (m)ismatches  exist,  (w)ritemostly,  (X) unknown.  (p)artial signifies that one or more of the Physical Volumes this Logical Volume uses is missing from the system.
                 (r)efresh signifies that one or more of the Physical Volumes this RAID Logical Volume uses had suffered a write error.  The write error could be due to a temporary failure of that Physical Volume or  an  indication
                 that  it  is failing.  The device should be refreshed or replaced.  (m)ismatches signifies that the RAID logical volume has portions of the array that are not coherent.  Inconsistencies are detected by initiating a
                 "check" on a RAID logical volume.  (The scrubbing operations, "check" and "repair", can be performed on a RAID logical volume via the 'lvchange' command.)  (w)ritemostly signifies the devices in a  RAID  1  logical
                 volume that have been marked write-mostly.

              10 s(k)ip activation: this volume is flagged to be skipped during activation.

       -O, --sort
              Comma-separated ordered list of columns to sort by.  Replaces the default selection. Precede any column with '-' for a reverse sort on that column.

       --rows Output columns as rows.

       -S, --select Selection
              Display  only  rows  that  match  Selection  criteria.  All rows are displayed with the additional "selected" column (-o selected) showing 1 if the row matches the Selection and 0 otherwise. The Selection criteria are
              defined by specifying column names and their valid values (that can include reserved values) while making use of supported comparison operators. See lvm(8) and -S, --select description for  more  detailed  information
              about  constructing  the Selection criteria. As a quick help and to see full list of column names that can be used in Selection including the list of reserved values and the set of supported selection operators, check
              the output of lvs -S help command.

       --segments
              Use default columns that emphasize segment information.

       --separator Separator
              String to use to separate each column.  Useful if grepping the output.

       --unbuffered
              Produce output immediately without sorting or aligning the columns properly.

       --units hHbBsSkKmMgGtTpPeE
              All sizes are output in these units: (h)uman-readable, (b)ytes, (s)ectors, (k)ilobytes, (m)egabytes, (g)igabytes, (t)erabytes, (p)etabytes, (e)xabytes.  Capitalise to use multiples of 1000 (S.I.) instead of 1024.  Can
              also specify custom units e.g. --units 3M

       --unquoted
              When used with --nameprefixes, output values in the field=value pairs are not quoted.

SEE ALSO
       lvm(8), lvdisplay(8), pvs(8), vgs(8)



Sistina Software UK                                                                             LVM TOOLS 2.02.130(2)-RHEL7 (2015-10-14)                                                                                         LVS(8)
RESIZE2FS(8)                                                                                            System Manager's Manual                                                                                            RESIZE2FS(8)


-----------------------------------------------------------------------------------------------------------------------------------------
NAME
       resize2fs - ext2/ext3/ext4 file system resizer

SYNOPSIS
       resize2fs [ -fFpPM ] [ -d debug-flags ] [ -S RAID-stride ] device [ size ]

DESCRIPTION
       The  resize2fs  program  will  resize ext2, ext3, or ext4 file systems.  It can be used to enlarge or shrink an unmounted file system located on device.  If the filesystem is mounted, it can be used to expand the size of the
       mounted filesystem, assuming the kernel supports on-line resizing.  (As of this writing, the Linux 2.6 kernel supports on-line resize for filesystems mounted using ext3 and ext4.).

       The size parameter specifies the requested new size of the filesystem.  If no units are specified, the units of the size parameter shall be the filesystem blocksize of the filesystem.  Optionally, the size parameter  may  be
       suffixed by one of the following the units designators: 's', 'K', 'M', or 'G', for 512 byte sectors, kilobytes, megabytes, or gigabytes, respectively.  The size of the filesystem may never be larger than the size of the par-
       tition.  If size parameter is not specified, it will default to the size of the partition.

       Note: when kilobytes is used above, I mean real, power-of-2 kilobytes, (i.e., 1024 bytes), which some politically correct folks insist should be the stupid-sounding ``kibibytes''.  The same holds  true  for  megabytes,  also
       sometimes known as ``mebibytes'', or gigabytes, as the amazingly silly ``gibibytes''.  Makes you want to gibber, doesn't it?

       The resize2fs program does not manipulate the size of partitions.  If you wish to enlarge a filesystem, you must make sure you can expand the size of the underlying partition first.  This can be done using fdisk(8) by delet-
       ing the partition and recreating it with a larger size or using lvextend(8), if you're using the logical volume manager lvm(8).  When recreating the partition, make sure you create it with the same starting disk cylinder  as
       before!   Otherwise,  the  resize operation will certainly not work, and you may lose your entire filesystem.  After running fdisk(8), run resize2fs to resize the ext2 filesystem to use all of the space in the newly enlarged
       partition.

       If you wish to shrink an ext2 partition, first use resize2fs to shrink the size of filesystem.  Then you may use fdisk(8) to shrink the size of the partition.  When shrinking the size of the partition, make sure you  do  not
       make it smaller than the new size of the ext2 filesystem!

OPTIONS
       -d debug-flags
              Turns on various resize2fs debugging features, if they have been compiled into the binary.  debug-flags should be computed by adding the numbers of the desired features from the following list:
                   2    - Debug block relocations
                   4    - Debug inode relocations
                   8    - Debug moving the inode table
                   16   - Print timing information
                   32   - Debug minimum filesystem size (-M) calculation

       -f     Forces resize2fs to proceed with the filesystem resize operation, overriding some safety checks which resize2fs normally enforces.

       -F     Flush the filesystem device's buffer caches before beginning.  Only really useful for doing resize2fs time trials.

       -M     Shrink the filesystem to the minimum size.

       -p     Prints out a percentage completion bars for each resize2fs operation during an offline resize, so that the user can keep track of what the program is doing.

       -P     Print the minimum size of the filesystem and exit.

       -S RAID-stride
              The  resize2fs  program will heuristically determine the RAID stride that was specified when the filesystem was created.  This option allows the user to explicitly specify a RAID stride setting to be used by resize2fs
              instead.

KNOWN BUGS
       The minimum size of the filesystem as estimated by resize2fs may be incorrect, especially for filesystems with 1k and 2k blocksizes.

AUTHOR
       resize2fs was written by Theodore Ts'o <tytso@mit.edu>.

COPYRIGHT
       Resize2fs is Copyright 1998 by Theodore Ts'o and PowerQuest, Inc.  All rights reserved.  As of April, 2000 Resize2fs may be redistributed under the terms of the GPL.

SEE ALSO
       fdisk(8), e2fsck(8), mke2fs(8), lvm(8), lvextend(8)



E2fsprogs version 1.42.9                                                                                     December 2013                                                                                                 RESIZE2FS(8)
